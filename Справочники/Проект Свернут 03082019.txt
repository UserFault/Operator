Проект и код проекта: V:\МоиПроекты\РечевойИнтерфейс\VisualStudio\SpeakIfaceTest1_v2-2017
Это первый релиз оператора, на котором я впервые отрабатывал движок исполнения команд.
Еще я начал ГУИ-вариант Оператора, но уж очень сильно его наворотил всякими хотелками (хоткеями, многозадачностью, таймерами лога. итп) и проект получился сложным. Я устал и отложил его. Даже не знаю сейчас, что в нем реализовано и зачем оно все. Надо перерабатывать всю концепцию проекта РИ и Оператор, и заново планировать достижение целей.

Результаты на 3 августа 2019: Сворачиваю проект, чтобы перейти к Менеджеру Проектов.
- этот релиз Оператора я использую теперь как тест для разных новых фишек.
-- ясно, что надо переделывать релиз на ГУЙ, так как консольное приложение не позволяет многих фишек винды.
-- я наметил план разработки версий Оператора, но его (план) надо описать более формально в вики.
- поставил Оператор в автозагрузку, теперь он собирает команды каждый запуск виндовс.
-- поместил релиз в папку Локальные инструменты, и туда копирую обновленные файлы сборок проекта. 
-- там же собираются логи команд сейчас
- веду бекапы БД Оператора, чтобы не набивать ее заново.  
- добавил несколько процедур и команд и мест.
- разработал субкоманды, выводимые в диалоге и вводимые пользователем.
- добавил цветовую схему и правила создания текстового диалога в процедурах.
-- Создал документ-руководство по цветам сообщений диалогов.
   
- Разработал структуру сборки процедур: 
-- служебный заголовочный класс с процедурами установки и удаления сборки из Оператора, загрузки и выгрузки сборки в процесс Оператора.
-- отдельные классы для разных типов процедур
-- определенный формат функций процедур
-- вспомогательный класс утилит для использования в процедурах сборки
- разработал (но кривовато) оболочку движка для работы сборок процедур с движком и остальными частями Оператора.
  Так как сборки процедур будут (теоретически) выполняться как попало и кем попало, они должны быть ограничены интерфейсом движка для доступа к частям Оператора и консоли. Вот классы-оболочки и должны этот интерфейс предоставить коду сборок процедур.
Но пока я не знаю точно этот интерфейс, все сделано в самом движке через функции. Позже надо будет переделать это в нормальный вид, удобный для работы.
- надо переработать всю концепцию Оператора. Надо переработать всю документацию Оператора - все вики перестроить. План есть, но он очень поверхностный. Это важно, чтобы уменьшить бардак в проекте - сейчас его уже очень много.
- накидал кучу новых заметок-идей в вики РИ. Их тоже надо бы внести в концепцию.
- сборкам надо сопоставить категории - неймспейсы. Накидал правила создания сборок процедур, но вот это все надо свести в один правильный документ. Неймспейсы  также сопоставляются и процедурам этой сборки. Значит, и командам.
-- вероятно, в БД придется завести таблицу установленных в Оператор сборок процедур, чтобы получать их пути для открытия файлов справок и утилит. Так как утилиты теперь будут храниться где-то в каталоге сборки.
- написал несколько процедур операций с местами: Создать место Х и Показать места.
-- столкнулся с проблемами и частично их решил. Другую часть описал в вики. 
   Но код процедур этих все еще не закончен. 
   Хотя уже можно выполнять эти функции, но не сделаны некоторые проверки и форма представления данных не оптимальная.
-- надо доделать намеченные процедуры, но вот как-то не хватило времени на это. Там надо проектировать текстовый диалогс пользователем, а у меня это идет очень медленно, непривычно тяжело. И я совсем отучился алгоритмы разрабатывать. Там надо блок-схемы рисовать, это важно. Надо документацию делать на каждую процедуру. Я описал эти проблемы где-то в заметке.

В myCodeLibrary:
- есть код для очистки корзины. Можно создать процедуры для команды Очистить корзину и Очистить корзину на диске Х
- есть код для свертывания и развертывания всех окон рабочего стола. Можно создать процедуры для команд Показать рабочий стол, Свернуть все окна, развернуть все окна, показать все окна.  

 